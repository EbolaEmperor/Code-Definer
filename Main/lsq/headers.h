const int SZ=80;
using namespace std;
const string KeyWord[SZ]={
"<<=","stdin","isdigit",">>=","puts","unique","first","second","?","static","EOF","fwrite","upper_bound","+=","-=","%=","*=","/=","/","++","--","<=",">=","||","&&","getchar","cout","!","%","^","&","*","(",")","+","[","]","{","}","<",">",";",":",",","for","const","return","main","int","long","if","pair","typedef","using","namespace","std","bool","double","while","fread","char","inline","break","continue","else","queue","stack","priority_queue","=","printf","scanf","cin","min","max","struct","<<",">>","!=","==","goto"};
map<string,string>mp;
void init(){
mp["<<="]="_";
mp["stdin"]="__";
mp["isdigit"]="___";
mp[">>="]="____";
mp["puts"]="_____";
mp["unique"]="______";
mp["first"]="_______";
mp["second"]="________";
mp["?"]="_________";
mp["static"]="__________";
mp["EOF"]="___________";
mp["fwrite"]="____________";
mp["upper_bound"]="_____________";
mp["+="]="______________";
mp["-="]="_______________";
mp["%="]="________________";
mp["*="]="_________________";
mp["/="]="__________________";
mp["/"]="___________________";
mp["++"]="____________________";
mp["--"]="_____________________";
mp["<="]="______________________";
mp[">="]="_______________________";
mp["||"]="________________________";
mp["&&"]="_________________________";
mp["getchar"]="__________________________";
mp["cout"]="___________________________";
mp["!"]="____________________________";
mp["%"]="_____________________________";
mp["^"]="______________________________";
mp["&"]="_______________________________";
mp["*"]="________________________________";
mp["("]="_________________________________";
mp[")"]="__________________________________";
mp["+"]="___________________________________";
mp["["]="____________________________________";
mp["]"]="_____________________________________";
mp["{"]="______________________________________";
mp["}"]="_______________________________________";
mp["<"]="________________________________________";
mp[">"]="_________________________________________";
mp[";"]="__________________________________________";
mp[":"]="___________________________________________";
mp[","]="____________________________________________";
mp["for"]="_____________________________________________";
mp["const"]="______________________________________________";
mp["return"]="_______________________________________________";
mp["main"]="________________________________________________";
mp["int"]="_________________________________________________";
mp["long"]="__________________________________________________";
mp["if"]="___________________________________________________";
mp["pair"]="____________________________________________________";
mp["typedef"]="_____________________________________________________";
mp["using"]="______________________________________________________";
mp["namespace"]="_______________________________________________________";
mp["std"]="________________________________________________________";
mp["bool"]="_________________________________________________________";
mp["double"]="__________________________________________________________";
mp["while"]="___________________________________________________________";
mp["fread"]="____________________________________________________________";
mp["char"]="_____________________________________________________________";
mp["inline"]="______________________________________________________________";
mp["break"]="_______________________________________________________________";
mp["continue"]="________________________________________________________________";
mp["else"]="_________________________________________________________________";
mp["queue"]="__________________________________________________________________";
mp["stack"]="___________________________________________________________________";
mp["priority_queue"]="____________________________________________________________________";
mp["="]="_____________________________________________________________________";
mp["printf"]="______________________________________________________________________";
mp["scanf"]="_______________________________________________________________________";
mp["cin"]="________________________________________________________________________";
mp["min"]="_________________________________________________________________________";
mp["max"]="__________________________________________________________________________";
mp["struct"]="___________________________________________________________________________";
mp["<<"]="____________________________________________________________________________";
mp[">>"]="_____________________________________________________________________________";
mp["!="]="______________________________________________________________________________";
mp["=="]="_______________________________________________________________________________";
mp["goto"]="________________________________________________________________________________";
}
string now="________________________________________________________________________________";
